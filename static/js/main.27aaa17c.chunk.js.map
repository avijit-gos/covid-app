{"version":3,"sources":["Corona-App/Global/Chart.js","Corona-App/Global/Card.js","Corona-App/Country/Card.js","Corona-App/Country/Chart.js","Corona-App/Main.js","index.js"],"names":["Chart","active","recovered","death","data","labels","datasets","value","backgroundColor","borderColor","options","maintainAspectRatio","width","height","Card","totalCases","update_date","Date","lastUpdate","toLocaleDateString","className","CountryCard","countryDate","countryactive","countryrecovered","countrydeath","CountryChart","Main","useState","setTotalCases","setActive","setRecovered","setDeath","counbtryCases","setCountryCases","setcountryActive","setcountryRecovered","setcountryDeath","setCountryData","countryList","setCountryList","useEffect","axios","get","then","response1","confirmed","deaths","response2","countries","catch","error","console","log","alert","onChange","e","countryName","target","response3","map","name","undefined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27aaa17c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nfunction Chart({active, recovered, death}) {\r\n    let activeCase = active.value;\r\n    let recoveredCase = recovered.value;\r\n    let deathCase = death.value;\r\n\r\n    const data = {\r\n        labels: [\"Confirmed Cases\", \"Recovered Cases\", \"Death Cases\"],\r\n        datasets: [\r\n            {\r\n                labels: \"Corona Cases\",\r\n                data: [activeCase, recoveredCase, deathCase],\r\n                backgroundColor: ['rgba(72, 52, 212,1.0)', 'rgba(106, 176, 76,1.0)', 'rgba(235, 77, 75,1.0)'],\r\n                borderColor: ['rgba(72, 52, 212,1.0)', 'rgba(106, 176, 76,1.0)', 'rgba(235, 77, 75,1.0)']\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Doughnut data={data} options={{ maintainAspectRatio: false }} width={100} height={400} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React from 'react';\r\nimport CountUp from 'react-countup';\r\n\r\nfunction Card({totalCases, active, recovered, death}) {\r\n   let date = new Date(totalCases.lastUpdate);\r\n   let update_date = date.toLocaleDateString()\r\n    return (\r\n        <div className=\"card-box\">\r\n           <div className=\"confirmed\">\r\n              <p className=\"confirmed-text\">active cases</p>\r\n              <p className=\"confirmed-number\">{active.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n\r\n           <div className=\"recovered\">\r\n              <p className=\"recovered-text\">recovered cases</p>\r\n              <p className=\"recovered-number\">{recovered.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n\r\n           <div className=\"death\">\r\n              <p className=\"death-text\">death cases</p>\r\n              <p className=\"death-number\">{death.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nfunction CountryCard({countryDate, countryactive, countryrecovered, countrydeath}) {\r\n   let date = new Date(countryDate.lastUpdate);\r\n   let update_date = date.toLocaleDateString() \r\n   return (\r\n        <div className=\"card-box\">\r\n           <div className=\"confirmed\">\r\n              <p className=\"confirmed-text\">active cases</p>\r\n              <p className=\"confirmed-number\">{countryactive.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n\r\n           <div className=\"recovered\">\r\n              <p className=\"recovered-text\">recovered cases</p>\r\n              <p className=\"recovered-number\">{countryrecovered.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n\r\n           <div className=\"death\">\r\n              <p className=\"death-text\">death cases</p>\r\n              <p className=\"death-number\">{countrydeath.value}</p>\r\n              <p className=\"update-time\">{update_date}</p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard\r\n","import React from 'react'\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nfunction CountryChart({countryactive, countryrecovered, countrydeath}) {\r\n    let activeCase = countryactive.value;\r\n    let recoveredCase = countryrecovered.value;\r\n    let deathCase = countrydeath.value;\r\n\r\n    const data = {\r\n        labels: [\"Confirmed Cases\", \"Recovered Cases\", \"Death Cases\"],\r\n        datasets: [\r\n            {\r\n                labels: \"Corona Cases\",\r\n                data: [activeCase, recoveredCase, deathCase],\r\n                backgroundColor: ['rgba(72, 52, 212,1.0)', 'rgba(106, 176, 76,1.0)', 'rgba(235, 77, 75,1.0)'],\r\n                borderColor: ['rgba(72, 52, 212,1.0)', 'rgba(106, 176, 76,1.0)', 'rgba(235, 77, 75,1.0)']\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <Doughnut data={data} options={{ maintainAspectRatio: false }} width={100} height={400} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryChart\r\n","import axios from 'axios';\r\nimport Chart from './Global/Chart';\r\nimport React,{useState, useEffect} from 'react'\r\nimport Card from './Global/Card';\r\nimport CountryCard from './Country/Card'\r\nimport CountryChart from './Country/Chart';\r\nfunction Main() {\r\n    //global card datas..\r\n    const [totalCases, setTotalCases] = useState({});\r\n    const [active, setActive] = useState({});\r\n    const [recovered, setRecovered] = useState({});\r\n    const [death, setDeath] = useState({});\r\n\r\n    //coutry wise covid datas...\r\n    const [counbtryCases, setCountryCases] = useState({});\r\n    const [countryactive, setcountryActive] = useState({});\r\n    const [countryrecovered, setcountryRecovered] = useState({});\r\n    const [countrydeath, setcountryDeath] = useState({});\r\n    const [countryDate, setCountryData] = useState({})\r\n\r\n    //country name list array...\r\n    const [countryList, setCountryList] = useState([]);\r\n\r\n    //fetchin API data..\r\n    useEffect(()=>{\r\n        axios.get(\"https://covid19.mathdro.id/api\")\r\n        .then(response1 => {\r\n            setTotalCases(response1.data);\r\n            setActive(response1.data.confirmed);\r\n            setRecovered(response1.data.recovered);\r\n            setDeath(response1.data.deaths);\r\n\r\n            //change picker list API...\r\n            axios.get(\"https://covid19.mathdro.id/api/countries\")\r\n            .then(response2 => {\r\n                setCountryList(response2.data.countries);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error: Ooops! something went wrong in county list\")\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(\"Error: Ooops! something went wrong in Card API\")\r\n        })\r\n    }, []);\r\n\r\n    //changeCountry function...\r\n    const changeCountry = (e) => {\r\n        let countryName = e.target.value;\r\n        \r\n        //fetching country covid data..\r\n        axios.get(`https://covid19.mathdro.id/api/countries/${countryName}`)\r\n        .then(response3 =>{\r\n            setCountryData(response3.data)\r\n            setcountryActive(response3.data.confirmed);\r\n            setcountryRecovered(response3.data.recovered);\r\n            setcountryDeath(response3.data.deaths)\r\n            setCountryCases(response3.data)\r\n        })\r\n        .catch(error => {\r\n            alert('Error: We could not fetch Country covid details.')\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n            <div className=\"image\">\r\n            </div>\r\n                <p>Covid19 tracker app</p>\r\n                <select className=\"country-picker\" onChange={changeCountry}>\r\n                   <option>Global</option>\r\n                   {\r\n                    countryList.map(name => <option key={name.name} value={name.name}>{name.name}</option>)\r\n                   }\r\n                </select>\r\n            </div>\r\n            {\r\n                counbtryCases.confirmed !== undefined \r\n                ? <div>\r\n                      <CountryCard countryDate={countryDate} countryactive={countryactive} countryrecovered={countryrecovered} countrydeath={countrydeath} />\r\n                      <CountryChart countryactive={countryactive} countryrecovered={countryrecovered} countrydeath={countrydeath} />\r\n                  </div>  \r\n                : <div>\r\n                   <Card totalCases={totalCases} active={active} recovered={recovered} death={death} />\r\n                   <Chart active={active} recovered={recovered} death={death} />\r\n                  </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Corona-App/Main';\nimport './Corona-App/Style.css'\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}